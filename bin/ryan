#!/usr/bin/env reia

module GoRyan
  def run(args)
    port = 8001
    port = args[1].to_int() if args[0] == '-p' or args[0] == '--port'
    
    if args[0] == '-h' or args[0] == '--help'
      help()
    else
      check_couchdb()
      if File.file?('startup.re')
        dependencies()
        init_ets()
        init_db()
        load_models()
        Main.load('startup.re')
      
        if [a | a in args, a=='--yaws'].size() == 0
          mochi_shim::start_mochi(port)
        else
          yaws_shim::init_yaws(port)
        end
      else
        '! You are either running from incorrect folder, either startup.re is missing'.puts()
      end
    end
  end

  def dependencies
    'Starting up Ryan...'.puts()
    ryan_dir = [code::lib_dir().to_string(), 'ryan', 'lib'].join('/')
    # required = Dir.list(ryan_dir)
    required = ["behave.re", "controller.re", "controllers.re", "model.re", "page.re", "retem.re", "ryan.re", "session.re"]
    'Loading '.print()
    required.each do |lib|
      '#{lib} '.print()
      Main.load('#{ryan_dir}/#{lib}')
    end
    ' done.'.puts()
  end

  def init_ets
    ets::new(:sessions, [:named_table, :public])
    ets::new(:templates, [:named_table, :public])
  end

  def check_couchdb
    try
      erlang_couchdb::server_info(('localhost'.to_list(), 5984))
      true
    catch e
      "! CouchDB doesn't seem to be running".puts()
      false
    end
  end
  
  def init_db
    if erlang_couchdb::database_info(('localhost'.to_list(), 5984), 'default'.to_list()) == (:ok,[(<<"error">>,<<"not_found">>),(<<"reason">>,<<"Missing">>)])
      'Creating database'.puts()
      erlang_couchdb::create_database(('localhost'.to_list(), 5984), 'default'.to_list())
    end
  end

  def load_models
    models = Dir.list('models')
    models.each do |model|
      'Loading #{model}'.puts()
      Main.load('models/#{model}')
      object = reia::spawn(model.split(/\\.re/)[0].capitalize().to_atom(), [{}])
      object.create_views()
    end
  end
  
  def help
    'Usage: ryan [--help|-h] [--port|-p <port_number>] [--yaws|--mochi]'.puts()
  end
end  
  
GoRyan.run(System.args())
